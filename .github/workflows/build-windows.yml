name: Build .NET MAUI (Windows)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  # Optional: Allow manual triggering from GitHub Actions UI
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install MAUI workload (Windows only)
        run: dotnet workload install maui-windows

      - name: Restore dependencies
        run: dotnet restore RestaurantPOS.sln
        
      - name: Build Windows
        run: dotnet build RestaurantPOS.sln -c Release -f net8.0-windows10.0.19041.0 /p:WindowsPackageType=None /p:UseMauiAndroid=false /p:UseMauiIOS=false /p:UseMauiMacCatalyst=false /p:WindowsAppSDKSelfContained=false /p:UseRidGraph=true

      - name: Publish desktop app
        run: |
          dotnet publish RestaurantPOS.csproj -c Release -f net8.0-windows10.0.19041.0 -o ./publish/windows --self-contained true /p:UseMauiAndroid=false /p:UseMauiIOS=false /p:UseMauiMacCatalyst=false /p:WindowsAppSDKSelfContained=false /p:UseRidGraph=true
        shell: bash

      - name: Test desktop app
        run: |
          echo "Testing Windows desktop application..."
          dotnet test --configuration Release --framework net8.0-windows10.0.19041.0 --verbosity normal || echo "No tests found or test execution failed"

      - name: Find build artifacts
        shell: pwsh
        run: |
          Get-ChildItem -Path "./publish/windows" -Recurse | Select-Object FullName

      - name: Upload Windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-app
          path: './publish/windows/**'
          retention-days: 7

  release:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: windows-app
          path: ./artifacts/windows-app

      - name: List artifacts
        run: find ./artifacts -type f -name "*"

      - name: Generate release tag
        id: tag
        run: |
          TAG="v$(date +'%Y.%m.%d')-windows-$(echo $GITHUB_SHA | cut -c1-7)"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Generated tag: $TAG"

      - name: Copy installation script
        run: |
          cp ./install-windows-dependencies.ps1 ./artifacts/windows-app/

      - name: Create README for Windows
        run: |
          cat > ./artifacts/windows-app/README.txt << 'EOF'
          RestaurantPOS Windows Application
          ================================

          Installation Instructions:
          1. Extract all files to a folder on your Windows machine
          2. Right-click on "install-windows-dependencies.ps1" and select "Run with PowerShell"
          3. Follow the prompts to install the required Windows App Runtime components
          4. After successful installation, run RestaurantPOS.exe

          Note: Windows App Runtime is required for this application to run properly.
          The installation script will help you install this dependency automatically.
          EOF

      - name: Create Windows executable archive
        id: find-windows
        run: |
          if [ -d "./artifacts/windows-app" ]; then
            cd ./artifacts/windows-app
            tar -czf "$GITHUB_WORKSPACE/RestaurantPOS-Windows.tar.gz" *
            echo "windows_found=true" >> $GITHUB_OUTPUT
            echo "Windows app archived"
          else
            echo "windows_found=false" >> $GITHUB_OUTPUT
            echo "No Windows app found"
          fi

      - name: Create Release and Upload Assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: RestaurantPOS Windows ${{ steps.tag.outputs.tag }}
          body: |
            ## RestaurantPOS Windows Release
            
            **Build Date:** $(date +'%Y-%m-%d %H:%M:%S UTC')
            **Commit:** ${{ github.sha }}
            
            ### Included Platform:
            - ðŸªŸ **Windows Desktop** - Windows application with dependency installer
            
            ### Installation:
            1. Extract all files from the tar.gz archive
            2. Right-click on "install-windows-dependencies.ps1" and select "Run with PowerShell"
            3. Follow the prompts to install the Windows App Runtime components
            4. After successful installation, run RestaurantPOS.exe
            
            Built automatically from commit ${{ github.sha }}
          files: |
            RestaurantPOS-Windows.tar.gz
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
