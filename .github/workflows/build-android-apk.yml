name: Build .NET MAUI Cross-Platform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        include:
          - platform: android
            runs-on: windows-latest
            target-framework: net8.0-android
            build-args: /p:AndroidPackageFormat=apk
            artifact-name: android-apk
            artifact-path: '**/*.apk'
          - platform: ios
            runs-on: macos-latest
            target-framework: net8.0-ios
            build-args: /p:CreatePackage=true
            artifact-name: ios-app
            artifact-path: '**/*.app'
          - platform: linux
            runs-on: ubuntu-latest
            target-framework: net8.0
            build-args: --no-restore
            artifact-name: linux-build
            artifact-path: '**/bin/Release/net8.0/**'
    
    runs-on: ${{ matrix.runs-on }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Setup Java JDK (Android only)
        if: matrix.platform == 'android'
        uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '11'

      - name: Setup Xcode (iOS only)
        if: matrix.platform == 'ios'
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Setup Linux dependencies (Linux only)
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libc6-dev libgdiplus libx11-dev

      - name: Install MAUI workload
        run: |
          if ("${{ matrix.platform }}" -eq "linux") {
            dotnet workload install maui --skip-sign-check || echo "MAUI workload installation failed on Linux, continuing..."
          } else {
            dotnet workload install maui
          }
        shell: pwsh

      - name: Restore dependencies
        run: dotnet restore RestaurantPOS.sln

      - name: Build ${{ matrix.platform }}
        run: dotnet build RestaurantPOS.sln -c Release -f ${{ matrix.target-framework }} ${{ matrix.build-args }}

      - name: Find build artifacts
        shell: pwsh
        run: |
          if ("${{ matrix.platform }}" -eq "android") {
            Get-ChildItem -Path . -Filter "*.apk" -Recurse | Select-Object FullName
          } elseif ("${{ matrix.platform }}" -eq "ios") {
            Get-ChildItem -Path . -Filter "*.app" -Recurse | Select-Object FullName
          } else {
            Get-ChildItem -Path . -Name "bin" -Recurse | Select-Object FullName
          }

      - name: Upload ${{ matrix.platform }} artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact-name }}
          path: ${{ matrix.artifact-path }}
